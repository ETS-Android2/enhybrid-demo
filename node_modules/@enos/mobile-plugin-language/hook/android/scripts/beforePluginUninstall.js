#!/usr/bin/env node

module.exports = function(ctx) {
  var shell = require('shelljs');
  var path = require('path');
  var fs = require('fs-extra');
  var ConfigParser = ctx.requireCordovaModule('cordova-common').ConfigParser,  
      config = new ConfigParser(path.join(ctx.opts.projectRoot, "config.xml")), 
      packageName = config.android_packageName() || config.packageName();

  try {    
    var envApplicationToEditor = path.join(ctx.opts.projectRoot, '/platforms/android/app/src/main/java/com/envisioncn/cordova/hybridInit/EnvApplication.java');
    rmAlternativeContentSync(fs, envApplicationToEditor, /(\/\/ mobile-plugin-language import start)([\s\S]*\/\/ mobile-plugin-language import end)/);
    rmAlternativeContentSync(fs, envApplicationToEditor, /(\/\/ mobile-plugin-language oncreate start)([\s\S]*\/\/ mobile-plugin-language oncreate end)/);
    rmAlternativeContentSync(fs, envApplicationToEditor, /(\/\/ mobile-plugin-language onconfigurationchanged start)([\s\S]*\/\/ mobile-plugin-language onconfigurationchanged end)/);
    var baseWebViewActivityToEditor = path.join(ctx.opts.projectRoot, '/platforms/android/app/src/main/java/com/envisioncn/cordova/webContainer/EnvBaseWebViewActivity.java');
    rmAlternativeContentSync(fs, baseWebViewActivityToEditor, /(\/\/ mobile-plugin-language import start)([\s\S]*\/\/ mobile-plugin-language import end)/);
    rmAlternativeContentSync(fs, baseWebViewActivityToEditor, /(\/\/ mobile-plugin-language add cookies start)([\s\S]*\/\/ mobile-plugin-language add cookies end)/);
  } catch (err) {
    console.log(err);
  }
}

function rmAlternativeContentSync(fs, file, regularStr){
  var readFileData = fs.readFileSync(file, 'utf8');
  readFileData = readFileData.replace(regularStr, '');
  fs.writeFileSync(file, readFileData);
}
