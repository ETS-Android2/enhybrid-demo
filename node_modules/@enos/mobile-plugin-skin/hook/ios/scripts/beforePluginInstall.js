#!/usr/bin/env node

module.exports = function(ctx) {
  var shell = require('shelljs');
  var path = require('path');
  var fs = require('fs-extra');
  var ConfigParser = ctx.requireCordovaModule('cordova-common').ConfigParser,  
      config = new ConfigParser(path.join(ctx.opts.projectRoot, "config.xml")), 
      name = config.name();
  try {
    var envDelegateToEditor = path.join(ctx.opts.projectRoot, `/platforms/ios/${name}/Plugins/mobile-plugin-hybrid-init/EnvDelegate.m`);
    writeAlternativeContentSync(fs, envDelegateToEditor, /(\/\/ IMPORT START)([\s\S]*\/\/ IMPORT END)/, 'import', '#import "TXSakuraKit.h"');
    writeAlternativeContentSync(fs, envDelegateToEditor, /(\/\/ APPLICATION START)([\s\S]*\/\/ APPLICATION END)/, 'application', '[UIApplication sharedApplication].sakura.statusBarStyle(@"EnvHybrid.statusBarStyle", YES);\n [TXSakuraManager registerLocalSakuraWithNames:@[@"light"]];\n NSString *name = [TXSakuraManager getSakuraCurrentName]; \nNSInteger type = [TXSakuraManager getSakuraCurrentType]; \n[TXSakuraManager shiftSakuraWithName:name type:type];');
    var baseWebViewActivityToEditor = path.join(ctx.opts.projectRoot, `/platforms/ios/${name}/Plugins/mobile-plugin-web-container/EnvWebViewController.m`);
    // writeAlternativeContentSync(fs, baseWebViewActivityToEditor, /(\/\/ IMPORT START)([\s\S]*\/\/ IMPORT END)/, 'import', '#import "TXSakuraKit.h"');
    writeAlternativeContentSync(fs, baseWebViewActivityToEditor, /(\/\/ SETCOOKIE START)([\s\S]*\/\/ SETCOOKIE END)/, 'setcookie', '[TXSakuraManager setSkinCookie:url];');
    var prefixToEditor = path.join(ctx.opts.projectRoot, `/platforms/ios/${name}/${name}-Prefix.pch`);
    writeSourceFileSync(fs, prefixToEditor, '#define TXSAKURA_SKIN true');
  } catch (err) {
  }
}

function writeSourceFileSync(fs, file, content){
  var data = fs.readFileSync(file, {encoding: 'utf-8'}); 
  data = data + `\n${content}`;  
  fs.writeFileSync(file, data);
}

function writeAlternativeContentSync(fs, file, regularStr, key, content){
  var addContent = '// mobile-plugin-skin ' + key + ' start\n' + content + '\n// mobile-plugin-skin ' + key + ' end'
  var readFileData = fs.readFileSync(file, 'utf8');
  readFileData = readFileData.replace(regularStr, '$1\n' + addContent + '    $2');
  fs.writeFileSync(file, readFileData);
}
