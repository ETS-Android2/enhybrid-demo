#!/usr/bin/env node

module.exports = function(ctx) {
  var shell = require('shelljs');
  var path = require('path');
  var fs = require('fs-extra');
  var ConfigParser = ctx.requireCordovaModule('cordova-common').ConfigParser,  
      config = new ConfigParser(path.join(ctx.opts.projectRoot, "config.xml")), 
      name = config.name();

  try {
    console.log(name);
    var envDelegateToEditor = path.join(ctx.opts.projectRoot, `/platforms/ios/${name}/Plugins/mobile-plugin-hybrid-init/EnvDelegate.m`);
    rmAlternativeContentSync(fs, envDelegateToEditor, /(\/\/ mobile-plugin-skin import start)([\s\S]*\/\/ mobile-plugin-skin import end)/);
    rmAlternativeContentSync(fs, envDelegateToEditor, /(\/\/ mobile-plugin-skin application start)([\s\S]*\/\/ mobile-plugin-skin application end)/);
    var envWebViewControllerToEditor = path.join(ctx.opts.projectRoot, `/platforms/ios/${name}/Plugins/mobile-plugin-web-container/EnvWebViewController.m`);
    // rmAlternativeContentSync(fs, envWebViewControllerToEditor, /(\/\/ mobile-plugin-skin import start)([\s\S]*\/\/ mobile-plugin-skin import end)/);
    rmAlternativeContentSync(fs, envWebViewControllerToEditor, /(\/\/ mobile-plugin-skin setcookie start)([\s\S]*\/\/ mobile-plugin-skin setcookie end)/);
    var prefixToEditor = path.join(ctx.opts.projectRoot, `/platforms/ios/${name}/${name}-Prefix.pch`);
    rmAlternativeContentSync(fs, prefixToEditor, /(#define TXSAKURA_SKIN true)/);
  } catch (err) {
    console.log(err);
  }
}

function rmAlternativeContentSync(fs, file, regularStr){
  var readFileData = fs.readFileSync(file, 'utf8');
  readFileData = readFileData.replace(regularStr, '');
  fs.writeFileSync(file, readFileData);
}
