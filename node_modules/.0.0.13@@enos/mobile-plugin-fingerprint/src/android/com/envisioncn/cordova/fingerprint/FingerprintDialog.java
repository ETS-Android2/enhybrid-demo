package com.envisioncn.cordova.fingerprint;

import android.app.Dialog;
import android.content.Context;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.TextView;

import ${PACKAGE_NAME}.R;

public class FingerprintDialog extends Dialog implements View.OnClickListener {
    private TextView tipTxt;
    private TextView contentTxt;
    private TextView submitTxt;
    private TextView cancelTxt;

    private View dividerV;

    private Context mContext;

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
        if(contentTxt!=null && this.content != null && !this.content.equals("")){
            contentTxt.setText(content);
        }
    }

    private String content;
    private OnBtnListener mSubmitListener;
    private OnBtnListener mCancelListener;
    private String positiveName;
    private String negativeName;

    public FingerprintDialog(Context context) {
        super(context);
        this.mContext = context;
    }

    public FingerprintDialog(Context context, int themeResId, String content) {
        super(context, themeResId);
        this.mContext = context;
        this.content = content;
    }

    public FingerprintDialog setPositiveButton(String name) {
        this.positiveName = name;
        return this;
    }

    public FingerprintDialog setNegativeButton(String name) {
        this.negativeName = name;
        return this;
    }

    public void setSubmitListener(OnBtnListener submitListener) {
        this.mSubmitListener = submitListener;
    }

    public void setCancelListener(OnBtnListener cancelListener) {
        this.mCancelListener = cancelListener;
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.enos_fingerprint_dialog);
        setCanceledOnTouchOutside(false);
        initView();
    }

    private void initView() {
        tipTxt = (TextView) findViewById(R.id.enos_fingerprint_dialog_tip);
        contentTxt = (TextView) findViewById(R.id.enos_fingerprint_dialog_content);
        dividerV = findViewById(R.id.enos_fingerprint_dialog_divider);
        submitTxt = (TextView) findViewById(R.id.enos_fingerprint_dialog_submit);
        submitTxt.setOnClickListener(this);
        cancelTxt = (TextView) findViewById(R.id.enos_fingerprint_dialog_cancel);
        cancelTxt.setOnClickListener(this);

        if(this.content != null && !this.content.equals("")){
            contentTxt.setText(content);
        }else{
            contentTxt.setVisibility(View.GONE);
        }
        if (!TextUtils.isEmpty(positiveName)) {
            submitTxt.setText(positiveName);
        }

        if (!TextUtils.isEmpty(negativeName)) {
            cancelTxt.setText(negativeName);
        }
    }

    public void changeMode(int mode){
        switch (mode){
            case 0:
                tipTxt.setText(R.string.enos_fingerprint_dialog_tip_mode_one);
                dividerV.setVisibility(View.GONE);
                submitTxt.setVisibility(View.GONE);
                break;
            case 1:
                tipTxt.setText(R.string.enos_fingerprint_dialog_tip_mode_two);
                dividerV.setVisibility(View.VISIBLE);
                submitTxt.setVisibility(View.VISIBLE);
                break;
            default:
                break;
        }
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.enos_fingerprint_dialog_cancel:
                if (mCancelListener != null) {
                    mCancelListener.onClick(this);
                }
                this.dismiss();
                break;
            case R.id.enos_fingerprint_dialog_submit:
                if (mSubmitListener != null) {
                    mSubmitListener.onClick(this);
                }
                break;
        }
    }

    public interface OnBtnListener {
        void onClick(Dialog dialog);
    }
}